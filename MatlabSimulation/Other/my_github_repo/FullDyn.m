function [zdot, T1, T2] = FullDyn( t,z,p )
%FULDYN Full dynamics for the double pendulum. Uses autogenerated Thdotdot1
%and 2.
th1 = z(1);
th2 = z(3);
thdot1 = z(2); % angular speed/velocity
thdot2 = z(4); % angular speed/velocity
% Fdx = 0;
% Fdy = 0;

%Current disturbance force on end effector
FxCurrent = p.Fx;
FyCurrent = p.Fy;



%Current Target
xCurrentTar = p.xtarget;
yCurrentTar = p.ytarget;

xdotCurrentTar = 0;
ydotCurrentTar = 0;

%Torque to track our desired point
T = ImpedenceControl(p.Kd, p.Kp, p.l1, p.l2, [xCurrentTar, yCurrentTar, 0]', [xdotCurrentTar, ydotCurrentTar, 0]', th1, th2, thdot1, thdot2);


%Add gravity compensation
T1 = T(1) + GravityCompT1(0, p.l1, p.l2, p.g, p.m1, p.m2, th1, th2, thdot1, thdot2);
T2 = T(2) + GravityCompT2(0, p.l1, p.l2, p.g, p.m2, th1, th2, thdot1, thdot2);

%Use the autoderived functions for the accelerations. 
thdotdot1 = Thdotdot1(FxCurrent,FyCurrent, p.l1, p.l2, T1, T2, p.g, p.m1, p.m2, th1, th2, thdot1, thdot2);
thdotdot2 = Thdotdot2(FxCurrent,FyCurrent, p.l1, p.l2, T1, T2, p.g, p.m1, p.m2, th1, th2, thdot1, thdot2);

%Assemble the state vector derivatives.
zdot = [thdot1
    thdotdot1
    thdot2
    thdotdot2
    ];

end

